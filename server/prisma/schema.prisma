// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int           @id @default(autoincrement())
  name      String
  email     String         @unique
  password  String
  country   String?
  receivers Receiver[]     // un usuario puede tener varios receptores
  remittancesSent Remittance[] @relation("SenderRelation")
  createdAt DateTime      @default(now())
}

model Receiver {
  id          Int      @id @default(autoincrement())
  name        String
  last_name   String
  address     String
  identity_id String
  country     String
  user_id     Int
  user        User     @relation(fields: [user_id], references: [id])
  remittances Remittance[]
  createdAt   DateTime @default(now())
}

model ExchangeRate {
  id            Int      @id @default(autoincrement())
  from_currency String
  to_currency   String
  rate          Float
  updatedAt     DateTime @default(now())
}

model Remittance {
  id               Int      @id @default(autoincrement())
  sender_id        Int
  receiver_id      Int
  from_currency    String
  to_currency      String
  amount           Float
  converted_amount Float
  rate_used        Float
  status           String   @default("pending")
  createdAt        DateTime @default(now())

  sender   User     @relation("SenderRelation", fields: [sender_id], references: [id])
  receiver Receiver @relation(fields: [receiver_id], references: [id])
}